// @generated by protobuf-ts 2.10.0
// @generated from protobuf file "headscale/v1/headscale.proto" (package "headscale.v1", syntax proto3)
// tslint:disable
import { SetPolicyResponse } from "./policy";
import { SetPolicyRequest } from "./policy";
import { GetPolicyResponse } from "./policy";
import { GetPolicyRequest } from "./policy";
import { DeleteApiKeyResponse } from "./apikey";
import { DeleteApiKeyRequest } from "./apikey";
import { ListApiKeysResponse } from "./apikey";
import { ListApiKeysRequest } from "./apikey";
import { ExpireApiKeyResponse } from "./apikey";
import { ExpireApiKeyRequest } from "./apikey";
import { CreateApiKeyResponse } from "./apikey";
import { CreateApiKeyRequest } from "./apikey";
import { DeleteRouteResponse } from "./routes";
import { DeleteRouteRequest } from "./routes";
import { GetNodeRoutesResponse } from "./routes";
import { GetNodeRoutesRequest } from "./routes";
import { DisableRouteResponse } from "./routes";
import { DisableRouteRequest } from "./routes";
import { EnableRouteResponse } from "./routes";
import { EnableRouteRequest } from "./routes";
import { GetRoutesResponse } from "./routes";
import { GetRoutesRequest } from "./routes";
import { BackfillNodeIPsResponse } from "./node";
import { BackfillNodeIPsRequest } from "./node";
import { MoveNodeResponse } from "./node";
import { MoveNodeRequest } from "./node";
import { ListNodesResponse } from "./node";
import { ListNodesRequest } from "./node";
import { RenameNodeResponse } from "./node";
import { RenameNodeRequest } from "./node";
import { ExpireNodeResponse } from "./node";
import { ExpireNodeRequest } from "./node";
import { DeleteNodeResponse } from "./node";
import { DeleteNodeRequest } from "./node";
import { RegisterNodeResponse } from "./node";
import { RegisterNodeRequest } from "./node";
import { SetTagsResponse } from "./node";
import { SetTagsRequest } from "./node";
import { GetNodeResponse } from "./node";
import { GetNodeRequest } from "./node";
import { DebugCreateNodeResponse } from "./node";
import { DebugCreateNodeRequest } from "./node";
import { ListPreAuthKeysResponse } from "./preauthkey";
import { ListPreAuthKeysRequest } from "./preauthkey";
import { ExpirePreAuthKeyResponse } from "./preauthkey";
import { ExpirePreAuthKeyRequest } from "./preauthkey";
import { CreatePreAuthKeyResponse } from "./preauthkey";
import { CreatePreAuthKeyRequest } from "./preauthkey";
import { ListUsersResponse } from "./user";
import { ListUsersRequest } from "./user";
import { DeleteUserResponse } from "./user";
import { DeleteUserRequest } from "./user";
import { RenameUserResponse } from "./user";
import { RenameUserRequest } from "./user";
import { CreateUserResponse } from "./user";
import { CreateUserRequest } from "./user";
import { ServiceType } from "@protobuf-ts/runtime-rpc";
/**
 * @generated ServiceType for protobuf service headscale.v1.HeadscaleService
 */
export const HeadscaleService = new ServiceType("headscale.v1.HeadscaleService", [
    { name: "CreateUser", options: { "google.api.http": { post: "/api/v1/user", body: "*" } }, I: CreateUserRequest, O: CreateUserResponse },
    { name: "RenameUser", options: { "google.api.http": { post: "/api/v1/user/{old_id}/rename/{new_name}" } }, I: RenameUserRequest, O: RenameUserResponse },
    { name: "DeleteUser", options: { "google.api.http": { delete: "/api/v1/user/{id}" } }, I: DeleteUserRequest, O: DeleteUserResponse },
    { name: "ListUsers", options: { "google.api.http": { get: "/api/v1/user" } }, I: ListUsersRequest, O: ListUsersResponse },
    { name: "CreatePreAuthKey", options: { "google.api.http": { post: "/api/v1/preauthkey", body: "*" } }, I: CreatePreAuthKeyRequest, O: CreatePreAuthKeyResponse },
    { name: "ExpirePreAuthKey", options: { "google.api.http": { post: "/api/v1/preauthkey/expire", body: "*" } }, I: ExpirePreAuthKeyRequest, O: ExpirePreAuthKeyResponse },
    { name: "ListPreAuthKeys", options: { "google.api.http": { get: "/api/v1/preauthkey" } }, I: ListPreAuthKeysRequest, O: ListPreAuthKeysResponse },
    { name: "DebugCreateNode", options: { "google.api.http": { post: "/api/v1/debug/node", body: "*" } }, I: DebugCreateNodeRequest, O: DebugCreateNodeResponse },
    { name: "GetNode", options: { "google.api.http": { get: "/api/v1/node/{node_id}" } }, I: GetNodeRequest, O: GetNodeResponse },
    { name: "SetTags", options: { "google.api.http": { post: "/api/v1/node/{node_id}/tags", body: "*" } }, I: SetTagsRequest, O: SetTagsResponse },
    { name: "RegisterNode", options: { "google.api.http": { post: "/api/v1/node/register" } }, I: RegisterNodeRequest, O: RegisterNodeResponse },
    { name: "DeleteNode", options: { "google.api.http": { delete: "/api/v1/node/{node_id}" } }, I: DeleteNodeRequest, O: DeleteNodeResponse },
    { name: "ExpireNode", options: { "google.api.http": { post: "/api/v1/node/{node_id}/expire" } }, I: ExpireNodeRequest, O: ExpireNodeResponse },
    { name: "RenameNode", options: { "google.api.http": { post: "/api/v1/node/{node_id}/rename/{new_name}" } }, I: RenameNodeRequest, O: RenameNodeResponse },
    { name: "ListNodes", options: { "google.api.http": { get: "/api/v1/node" } }, I: ListNodesRequest, O: ListNodesResponse },
    { name: "MoveNode", options: { "google.api.http": { post: "/api/v1/node/{node_id}/user", body: "*" } }, I: MoveNodeRequest, O: MoveNodeResponse },
    { name: "BackfillNodeIPs", options: { "google.api.http": { post: "/api/v1/node/backfillips" } }, I: BackfillNodeIPsRequest, O: BackfillNodeIPsResponse },
    { name: "GetRoutes", options: { "google.api.http": { get: "/api/v1/routes" } }, I: GetRoutesRequest, O: GetRoutesResponse },
    { name: "EnableRoute", options: { "google.api.http": { post: "/api/v1/routes/{route_id}/enable" } }, I: EnableRouteRequest, O: EnableRouteResponse },
    { name: "DisableRoute", options: { "google.api.http": { post: "/api/v1/routes/{route_id}/disable" } }, I: DisableRouteRequest, O: DisableRouteResponse },
    { name: "GetNodeRoutes", options: { "google.api.http": { get: "/api/v1/node/{node_id}/routes" } }, I: GetNodeRoutesRequest, O: GetNodeRoutesResponse },
    { name: "DeleteRoute", options: { "google.api.http": { delete: "/api/v1/routes/{route_id}" } }, I: DeleteRouteRequest, O: DeleteRouteResponse },
    { name: "CreateApiKey", options: { "google.api.http": { post: "/api/v1/apikey", body: "*" } }, I: CreateApiKeyRequest, O: CreateApiKeyResponse },
    { name: "ExpireApiKey", options: { "google.api.http": { post: "/api/v1/apikey/expire", body: "*" } }, I: ExpireApiKeyRequest, O: ExpireApiKeyResponse },
    { name: "ListApiKeys", options: { "google.api.http": { get: "/api/v1/apikey" } }, I: ListApiKeysRequest, O: ListApiKeysResponse },
    { name: "DeleteApiKey", options: { "google.api.http": { delete: "/api/v1/apikey/{prefix}" } }, I: DeleteApiKeyRequest, O: DeleteApiKeyResponse },
    { name: "GetPolicy", options: { "google.api.http": { get: "/api/v1/policy" } }, I: GetPolicyRequest, O: GetPolicyResponse },
    { name: "SetPolicy", options: { "google.api.http": { put: "/api/v1/policy", body: "*" } }, I: SetPolicyRequest, O: SetPolicyResponse }
]);
